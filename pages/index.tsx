import Head from "next/head";
import styles from "../styles/Home.module.css";

import Grid from "@material-ui/core/Grid";
import { makeStyles } from "@material-ui/core/styles";
import Card from "@material-ui/core/Card";
import CardActionArea from "@material-ui/core/CardActionArea";
import CardActions from "@material-ui/core/CardActions";
import CardContent from "@material-ui/core/CardContent";
import CardMedia from "@material-ui/core/CardMedia";
import Button from "@material-ui/core/Button";
import Typography from "@material-ui/core/Typography";

const useStyles = makeStyles({
  media: {
    height: 240,
  },
  thing: {
    alignItems: "center",
    width: "121vh",
  },
  root: {
    alignItems: "center",
    width: "60vh",
  },
});

interface Project {
  image: string;
  name: string;
  description: string;
  repository?: string;
  link?: string;
}

const projects: Project[] = [
  {
    image: "/images/malil.png",
    name: "Malil",
    description: "Malil is the perfect multipurpose bot for your discord server",
    link: "https://malil.netlify.app/",
  },
  {
    image: "/images/texter.png",
    name: "Texter",
    description: "The best powercord plugin if you want to get attention in a discord chat",
    repository: "https://github.com/SkyBlockDev/texter",
  },
  {
    image: "/images/timages.png",
    name: "NextJs image uploader",
    description: "A simple nextjs image uploader deployable to vercel using mongodb as a database",
    repository: "https://github.com/SkyBlockDev/next-image-uploader",
  },
  {
    image: "/images/natico.png",
    name: "Natico",
    description: "Natico is a advanced discordeno framework for making discord bots",
    repository: "https://github.com/naticoo/framework",
  },
  {
    image: "/images/scriptbot.png",
    name: "Script bot",
    description: "Script bot is a bot that can be used to make scripts to be executed within discord for example make channels and rename channels",
    repository: "https://github.com/SkyBlockDev/script-bot",
  },
  {
    image: "/images/website.png",
    name: "Tricked.is-a.dev",
    description: "A cool website that hosts cool projects",
    repository: "https://github.com/SkyBlockDev/skyblockdev.github.io",
    link: "https://tricked.is-a.dev",
  },
];

export default function Home() {
  const classes = useStyles();
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="tricked.is-a.dev/">Tricked</a>.is-a.dev
        </h1>
        <h2>These are some projects i have made</h2>
        <div className={classes.thing}>
          <Grid className={styles.thing} container spacing={1} alignItems="center" wrap="wrap">
            {projects.map((x, s) => {
              return (
                <Grid item key={s.toString() + "_CARD"}>
                  <Card className={classes.root}>
                    <CardActionArea>
                      <CardMedia className={classes.media} image={x.image} title="" />
                      <CardContent>
                        <Typography gutterBottom variant="h5" component="h2">
                          {x.name}
                        </Typography>
                        <Typography variant="body2" color="textSecondary" component="p">
                          {x.description}
                        </Typography>
                      </CardContent>
                    </CardActionArea>
                    <CardActions>
                      {x.repository ? (
                        <Button
                          size="small"
                          color="primary"
                          onClick={(e) => {
                            e.preventDefault();
                            window.location.href = x.repository as string;
                          }}
                        >
                          Repository
                        </Button>
                      ) : (
                        ""
                      )}
                      {x.link ? (
                        <Button
                          size="small"
                          color="primary"
                          onClick={(e) => {
                            e.preventDefault();
                            window.location.href = x.link as string;
                          }}
                        >
                          Website
                        </Button>
                      ) : (
                        ""
                      )}
                    </CardActions>
                  </Card>
                </Grid>
              );
            })}
          </Grid>
        </div>
      </main>
    </div>
  );
}
